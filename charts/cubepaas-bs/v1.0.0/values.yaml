# Default values for longhorn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  storagebs:
    engine: registry.cn-hangzhou.aliyuncs.com/link-cloud/cubepaas-bs-engine
    engineTag: v1.0.0
    manager: registry.cn-hangzhou.aliyuncs.com/link-cloud/cubepaas-bs-manager
    managerTag: v1.0.0
    ui: longhornio/longhorn-ui
    uiTag: v1.0.0
    instanceManager: registry.cn-hangzhou.aliyuncs.com/link-cloud/storagebs-im
    instanceManagerTag: v0622
  pullPolicy: IfNotPresent

service:
  ui:
    type: ClusterIP
    nodePort: null
  manager:
    type: ClusterIP
    nodePort: ""

persistence:
  defaultClass: false
  defaultClassReplicaCount: 3

csi:
  attacherImage: ~
  provisionerImage: ~
  nodeDriverRegistrarImage: ~
  resizerImage: ~
  kubeletRootDir: ~
  attacherReplicaCount: ~
  provisionerReplicaCount: ~
  resizerReplicaCount: ~

defaultSettings:
  backupTarget: ~
  backupTargetCredentialSecret: cubepaas-bs-credential
  createDefaultDiskLabeledNodes: ~
  defaultDataPath: ~
  replicaSoftAntiAffinity: ~
  storageOverProvisioningPercentage: ~
  storageMinimalAvailablePercentage: ~
  upgradeChecker: false
  hostNetwork: true
  defaultReplicaCount: ~
  guaranteedEngineCPU: 0.25
  defaultLonghornStaticStorageClass: storagebs
  backupstorePollInterval: ~
  taintToleration: ~
  interfaceName:
  registrySecret: ~
  autoSalvage: true
  disableSchedulingOnCordonedNode: true
  replicaZoneSoftAntiAffinity: true
  volumeAttachmentRecoveryPolicy: wait
  mkfsExt4Parameters: ~

privateRegistry:
  registryUrl: ~
  registryUser: ~
  registryPasswd: ~

resources:
  manager:
    limits:
     cpu: 100m
     memory: 128Mi
    requests:
     cpu: 100m
     memory: 128Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  #
awsSecret:
  accessKey:
  secretKey:
  endPoints:
  
ingress:
  ## Set to true to enable ingress record generation
  enabled: false


  host: xip.io

  ## Set this to true in order to enable TLS on the ingress record
  ## A side effect of this will be that the backend service will be connected at port 443
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: longhorn.local-tls

  ## Ingress annotations done as key:value pairs
  ## If you're using kube-lego, you will want to add:
  ## kubernetes.io/tls-acme: true
  ##
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  annotations:
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: true

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using kube-lego, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: longhorn.local-tls
  #   key:
  #   certificate:
